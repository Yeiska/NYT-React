{"version":3,"sources":["utils/API.js","components/ResultCard/ResultCard.js","components/Results/Results.js","pages/Home/Home.js","pages/SearchPage/SearchPage.js","components/Saved/Saved.js","pages/SavedPage/SavedPage.js","pages/NavTabs.js","App.js","serviceWorker.js","index.js"],"names":["APIKEY","API","findNewArticles","query","startDate","endDate","axios","get","BASEURL","params","api-key","q","sort","page","searchArticles","console","log","begin_date","end_date","saveArticle","articleData","post","removeArticle","id","delete","getSaved","ResultCard","handleFormSubmit","event","preventDefault","title","_this","props","date","url","then","res","catch","err","react_default","a","createElement","className","this","href","value","onClick","React","Component","Results","results","map","article","components_ResultCard_ResultCard","headline","main","web_url","pub_date","key","_id","Home","state","getNewArticles","setState","data","response","docs","components_Results_Results","SearchPage","topic","handleInputChange","_event$target","target","name","Object","defineProperty","Search_default","Saved","getSavedArticles","_this2","_this3","SavedCard_default","SavedPage","components_Saved_Saved","NavTabs","Link","to","window","location","pathname","App","BrowserRouter","pages_NavTabs","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a613457.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst BASEURL = \"https://api.nytimes.com/svc/search/v2/articlesearch.json?\";\r\nconst APIKEY = \"a9885c4a1f9249cfb382d2833e84d6a9\";\r\n\r\nexport default {\r\n    //use the NYT API to get new artilces (move to backend once routing issues are fixed)\r\n    findNewArticles: function (query, startDate, endDate) {\r\n        const sortType = \"newest\";\r\n        const url = BASEURL;\r\n\r\n        return axios.get(url, {\r\n            params: {\r\n                'api-key': APIKEY,\r\n                'q': query,\r\n                'sort': sortType,\r\n                'page': 0\r\n            }\r\n        });\r\n    },\r\n    ///use the NYT API to get find artilces (move to backend once routing issues are fixed)\r\n    searchArticles: function (query, startDate, endDate) {\r\n        const sortType = \"newest\";\r\n        const url = BASEURL;\r\n        console.log(query);\r\n        console.log(startDate + endDate);\r\n\r\n        return axios.get(url, {\r\n            params: {\r\n                'api-key': APIKEY,\r\n                'q': query,\r\n                'begin_date': startDate,\r\n                'end_date': endDate,\r\n                'sort': sortType,\r\n                'page': 0\r\n            }\r\n        });\r\n    },\r\n\r\n    //function to save an article to the database through the back end\r\n    saveArticle: function (articleData) {\r\n        console.log(\"Made it to the API utility\");\r\n        console.log(articleData);\r\n        return axios.post(\"/api/articles\", articleData);\r\n    },\r\n\r\n    //Fetch the saved articles from the database\r\n    removeArticle: function (id) {\r\n        return axios.delete(\"/api/articles/\" + id);\r\n    },\r\n\r\n    getSaved: function () {\r\n        return axios.get(\"/api/articles\");\r\n    }\r\n};","import React from \"react\";\r\nimport \"./ResultCard.css\";\r\nimport API from \"../../utils/API\";\r\n\r\n\r\nclass ResultCard extends React.Component {\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        console.log('submitting form');\r\n        API.saveArticle({\r\n            title: this.props.title,\r\n            date: this.props.date,\r\n            url: this.props.url\r\n        })\r\n        .then(res => console.log(res))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"results-card\">\r\n                <h2>{this.props.title}</h2>\r\n                <a href={this.props.url}>To Article</a>\r\n                <p>Published: {this.props.date}</p>\r\n                <button\r\n                className=\"btn btn-primary\"\r\n                value={this.props.id}\r\n                onClick={this.handleFormSubmit}\r\n                >Save Article</button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default ResultCard;","import React from \"react\";\r\nimport \"./Results.css\";\r\nimport ResultCard from \"../ResultCard\";\r\n\r\nclass Results extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"results-container\">\r\n            <h2 className=\"results-title\">Results</h2>\r\n                {this.props.results.map(article => (\r\n                    <ResultCard\r\n                        title={article.headline.main}\r\n                        url={article.web_url}\r\n                        date={article.pub_date}\r\n                        key={article._id}\r\n                        id={article._id}\r\n                    />\r\n                )\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Results;","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport API from \"../../utils/API.js\";\r\nimport Results from \"../../components/Results\"\r\n;\r\nclass Home extends React.Component {\r\n\r\n   state = {\r\n       results: [],\r\n   }\r\n\r\n   componentDidMount() {\r\n       this.getNewArticles();\r\n   }\r\n\r\n   getNewArticles = () => {\r\n        const query = \"news\";\r\n       API.findNewArticles(query)\r\n       .then(res => {\r\n           this.setState({\r\n               results: res.data.response.docs\r\n           })\r\n       })\r\n       .catch(err => console.log(err))\r\n   }\r\n\r\n\r\n    render() { return (\r\n        <div>\r\n            Home\r\n            <Results results={this.state.results}/>\r\n        </div>\r\n    );\r\n    }\r\n\r\n}; //end Home class \r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./SearchPage.css\";\r\nimport Search from \"../../components/Search\";\r\nimport Results from \"../../components/Results\";\r\nimport API from \"../../utils/API\";\r\n\r\nclass SearchPage extends React.Component {\r\n\r\n    state = {\r\n        results: [\"placeholder\"],\r\n        topic: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\"\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.getNewArticles();\r\n    }\r\n\r\n    getNewArticles = () => {\r\n        API.searchArticles(this.state.topic, this.state.startDate, this.state.endDate)\r\n        .then(res => {\r\n            this.setState({\r\n                results: res.data.response.docs\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search handleInputChange={this.handleInputChange} handleFormSubmit={this.handleFormSubmit}/>\r\n                {this.state.results[0] === \"placeholder\" ? <div></div> : <Results results={this.state.results} />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}; //end SearchPage component\r\n\r\nexport default SearchPage;","import React from \"react\";\r\nimport \"./Saved.css\";\r\nimport SavedCard from \"../SavedCard\";\r\nimport API from \"../../utils/API\";\r\n\r\nclass Saved extends React.Component {\r\n\r\n    state = {\r\n        results: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Component mounted\");\r\n        this.getSavedArticles();\r\n    }\r\n\r\n    getSavedArticles() {\r\n        API.getSaved()\r\n        .then(res => {\r\n            console.log(\"'Saved Response\");\r\n            console.log(res);\r\n            this.setState({\r\n                results: res.data\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.results.map(article => (\r\n                    <SavedCard\r\n                        getSavedArticles={this.getSavedArticles}\r\n                        title={article.title}\r\n                        url={article.url}\r\n                        date={article.date}\r\n                        key={article._id}\r\n                        id={article._id}\r\n                    />\r\n                )\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\r\nimport \"./SavedPage.css\";\r\nimport Saved from \"../../components/Saved\";\r\n\r\n\r\nclass SavedPage extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Saved />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default SavedPage;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavTabs = () => (\r\n  <ul className=\"nav nav-tabs\">\r\n    <li className=\"nav-item\">\r\n      <Link\r\n        to=\"/\"\r\n        className={\r\n          window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"\r\n        }\r\n      >\r\n        Home\r\n      </Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <Link\r\n        to=\"/search\"\r\n        className={\r\n          window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"\r\n        }\r\n      >\r\n        Search\r\n      </Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <Link\r\n        to=\"/saved\"\r\n        className={\r\n          window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"\r\n        }\r\n      >\r\n        Saved Articles\r\n      </Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default NavTabs;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport SearchPage from \"./pages/SearchPage\";\nimport SavedPage from \"./pages/SavedPage\";\nimport NavTabs from \"./pages/NavTabs\";\nimport \"./index.css\";\n\nclass App extends React.Component{\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavTabs />\n          <div className=\"wapper\">\n            <h1 className=\"title\">New York Times</h1>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/search\" component={SearchPage} />\n            <Route exact path=\"/saved\" component={SavedPage} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}